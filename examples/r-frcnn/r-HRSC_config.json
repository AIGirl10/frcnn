{"scales": "800",
 "max_size": "1000",
// "batch_size": "128", //maybe too big for rotated rcnn
 "batch_size": "512",

 "fg_fraction": "0.25",
 "fg_thresh": "0.5",
 "bg_thresh_hi": "0.5",
 "bg_thresh_lo": "0",
 "use_flipped": "1",

 "bbox_reg": "1",
 "bbox_thresh": "0.5",
 "snapshot_infix": "",
//可以先不进行norm,在运行过程中查看大概的值,填到这里
 "bbox_normalize_targets": "0",
 "bbox_inside_weights": "1.0, 1.0, 1.0, 1.0, 1.0",
 "bbox_normalize_means": "0.0, 0.0, 0.0, 0.0, 0.0",
 "bbox_normalize_stds": "1.0, 1.0, 1.0, 1.0, 1.0",

 // rpn iou thresh 0.7,0.3 is too high,and postive anchors will be too little,around 4
 "rpn_positive_overlap": "0.5",
 "rpn_negative_overlap": "0.1",
 "rpn_clobber_positives": "0",
 "rpn_fg_fraction": "0.5",
 "rpn_batchsize": "256",
 "rpn_nms_thresh": "0.7",
// "rpn_pre_nms_top_n": "12000",
// "rpn_post_nms_top_n": "2000", to accelerate the training
 "rpn_pre_nms_top_n": "12000",
 "rpn_post_nms_top_n": "2000",
 "rpn_min_size": "8",
 "rpn_bbox_inside_weights": "1.0, 1.0, 1.0, 1.0, 1.0",
 "rpn_positive_weight": "-1.0",
 "rpn_allowed_border": "0",


 "test_scales": "800",
 "test_max_size": "1000",
// "test_nms": "0.3", //this is for normal rectangle objects
// decrease a little,and also use pi/12 angle thresh in detector API.
 "test_nms": "0.15",
 "test_bbox_reg": "1",
 "test_rpn_nms_thresh": "0.7",
 "test_rpn_pre_nms_top_n": "6000",
 "test_rpn_post_nms_top_n": "1000",
// "test_rpn_post_nms_top_n": "300",
 "test_rpn_min_size": "8",

//for NWPU "pixel_means": "94.96611663, 97.88574817, 91.55046137",
//for HRSC2016 BGR
 "pixel_means": "78.45584074, 81.52607754, 70.95430712",
 "rng_seed": "3",
 "eps": "0.00000000000001",
 "inf": "100000000",

// "test_score_thresh": "0.05",
 "test_score_thresh": "0.1",
 "n_classes": "5",
 "iter_test": "-1",

 "feat_stride": "16",
//this is base_size=8 for 800x1000
 "anchors": "
    80,     40,     -1.047,
    80,     40,     -0.524,
    80,     40,      0.000,
    80,     40,      0.524,
    80,     40,      1.047,
    80,     40,      1.571,
   160,     80,     -1.047,
   160,     80,     -0.524,
   160,     80,      0.000,
   160,     80,      0.524,
   160,     80,      1.047,
   160,     80,      1.571,
   320,    160,     -1.047,
   320,    160,     -0.524,
   320,    160,      0.000,
   320,    160,      0.524,
   320,    160,      1.047,
   320,    160,      1.571,
   128,     24,     -1.047,
   128,     24,     -0.524,
   128,     24,      0.000,
   128,     24,      0.524,
   128,     24,      1.047,
   128,     24,      1.571,
   256,     48,     -1.047,
   256,     48,     -0.524,
   256,     48,      0.000,
   256,     48,      0.524,
   256,     48,      1.047,
   256,     48,      1.571,
   512,     96,     -1.047,
   512,     96,     -0.524,
   512,     96,      0.000,
   512,     96,      0.524,
   512,     96,      1.047,
   512,     96,      1.571,
   160,     16,     -1.047,
   160,     16,     -0.524,
   160,     16,      0.000,
   160,     16,      0.524,
   160,     16,      1.047,
   160,     16,      1.571,
   320,     32,     -1.047,
   320,     32,     -0.524,
   320,     32,      0.000,
   320,     32,      0.524,
   320,     32,      1.047,
   320,     32,      1.571,
   640,     64,     -1.047,
   640,     64,     -0.524,
   640,     64,      0.000,
   640,     64,      0.524,
   640,     64,      1.047,
   640,     64,      1.571"
}
